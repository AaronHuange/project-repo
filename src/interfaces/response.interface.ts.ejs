export type TExceptionOption =
  | string
  | {
  code: string;
  msg: string;
  errors?: any;
};

// 分页数据
export interface IHttpResultPaginate<T> {
  list: T;
  total: number;
}

// HTTP 状态返回
export interface IHttpResponseBase {
  success?: boolean;
  message?: string;
}

// HTTP error
export type THttpErrorResponse = IHttpResponseBase & {
  errors: any;
  code: string;
};

// HTTP success 返回
export type THttpSuccessResponse<T> = IHttpResponseBase & {
  data: T | IHttpResultPaginate<T>;
};

export type THttpSuccessSingleResponse<T> = IHttpResponseBase & {
  data: T;
};

// HTTP Response
export type THttpResponse<T> = THttpErrorResponse | THttpSuccessResponse<T>;

<%_ if (TYPE === 'GraphQL') { -%>
export interface GQLResponseError {
  message: string,
  locations: [{ line: number, column: number }],
  extensions: unknown,
}

export interface GQLResponse<T> {
  data: T | null,
  errors?: [GQLResponseError],
}
<%_ } -%>
